#!/usr/bin/env python
import os
import sys

# Get the SCons script directory
sconstruct_dir = Dir('.').abspath

# SConscript invocation
env = SConscript("godot-cpp/SConstruct")

# Set VLC include and library paths relative to SConstruct file
vlc_include_path = os.path.join(sconstruct_dir, 'libVLC/include' )  # Path to the VLC include files
vlc_lib_path = os.path.join(sconstruct_dir, 'libVLC')  # Path to the VLC library files

env.Append(CPPPATH=[vlc_include_path])  # Include path for the compiler
env.Append(LIBPATH=[vlc_lib_path])      # Library path for the linker

# Link against libvlc.lib
env.Append(LIBS=['libvlc'])  # Name of the VLC library to link against

# Source code paths
env.Append(CPPPATH=["src/"])  # Additional include directories
sources = Glob("src/*.cpp")   # Gather all .cpp source files in the src directory

# Check for build type
build_type = ARGUMENTS.get('build_type', 'shared')  # Default to 'shared' if not specified

# Build static or shared library based on build_type
if build_type == 'static':
    library = env.StaticLibrary(
        "demo/bin/libgdexample{}".format(env["LIBSUFFIX"]),
        source=sources,
    )
else:
    library = env.SharedLibrary(
        "demo/bin/libgdexample{}{}".format(env["suffix"], env["SHLIBSUFFIX"]),
        source=sources,
    )

# Set the default target
Default(library)
